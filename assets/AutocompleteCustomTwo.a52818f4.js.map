{"version":3,"file":"AutocompleteCustomTwo.a52818f4.js","sources":["../../src/utils/methods.js","../../src/pages/playground/projects/autocomplete-custom-two/AutocompleteCustomTwo.vue"],"sourcesContent":["export function useDebouncedRef(value, delay = 200) {\r\n  let timeout\r\n  return customRef((track, trigger) => {\r\n    return {\r\n      get() {\r\n        track()\r\n        return value\r\n      },\r\n      set(newValue) {\r\n        clearTimeout(timeout)\r\n        timeout = setTimeout(() => {\r\n          value = newValue\r\n          trigger()\r\n        }, delay)\r\n      },\r\n    }\r\n  })\r\n}\r\n\r\nexport function isObject(obj) {\r\n  return obj !== null && typeof obj === 'object' && !Array.isArray(obj)\r\n}\r\n","<template>\r\n  <VCard class=\"overflow-visible\" min-height=\"300\" color=\"#323a44\">\r\n    <VCardText>\r\n      <span class=\"pa-4\">\r\n        <div>\r\n          <code> searchable keys: {{ searchableKeys }} </code>\r\n        </div>\r\n\r\n        <div>\r\n          <code> Selected-item: {{ selectedItem }} </code>\r\n        </div>\r\n\r\n        <div>\r\n          <code> v-model: {{ itemValue }} </code>\r\n        </div>\r\n\r\n        <div>\r\n          <code>\r\n            return-object: {{ isReturnObject }}\r\n            <VBtn\r\n              color=\"success\"\r\n              @click=\"isReturnObject = !isReturnObject\"\r\n              density=\"compact\"\r\n            >\r\n              switch\r\n            </VBtn>\r\n          </code>\r\n        </div>\r\n\r\n        <div>\r\n          <code>\r\n            focus-on-select: {{ isFocusOnSelect }}\r\n            <VBtn\r\n              color=\"success\"\r\n              @click=\"focusOnSelect = !focusOnSelect\"\r\n              density=\"compact\"\r\n            >\r\n              switch\r\n            </VBtn>\r\n          </code>\r\n        </div>\r\n\r\n        <div>\r\n          <code>\r\n            clear-search-on-select: {{ isClearSearchOnSelect }}\r\n            <VBtn\r\n              color=\"success\"\r\n              @click=\"clearSearchOnSelect = !clearSearchOnSelect\"\r\n              density=\"compact\"\r\n            >\r\n              switch\r\n            </VBtn>\r\n          </code>\r\n        </div>\r\n      </span>\r\n\r\n      <VMenu>\r\n        <template v-slot:activator=\"{ props, isActive }\">\r\n          <VTextField\r\n            v-model=\"search\"\r\n            color.trim=\"primary\"\r\n            v-bind=\"props\"\r\n            ref=\"textFieldRef\"\r\n            :placeholder=\"placeholder\"\r\n            :append-inner-icon=\"\r\n              isActive ? '$mdiMenuUpOutline' : '$mdiMenuDownOutline'\r\n            \"\r\n          />\r\n        </template>\r\n\r\n        <VList\r\n          v-model:selected=\"selectedItem\"\r\n          @click:select=\"clickOnSelect\"\r\n          @update:selected=\"getSelectedItem()\"\r\n        >\r\n          <VListItem\r\n            v-for=\"(item, index) in filteredItems\"\r\n            :key=\"index\"\r\n            :value=\"item\"\r\n          >\r\n            <VListItemTitle>{{\r\n              itemToString(item, itemText, 'hasDefault')\r\n            }}</VListItemTitle>\r\n            <VListItem-subtitle>{{\r\n              itemToString(item, itemSubtitle)\r\n            }}</VListItem-subtitle>\r\n          </VListItem>\r\n        </VList>\r\n      </VMenu>\r\n    </VCardText>\r\n  </VCard>\r\n</template>\r\n<script setup>\r\nimport { isObject } from '@/utils/methods'\r\n\r\nlet textFieldRef = ref(null)\r\n\r\nlet items = ref([\r\n  { name: 'Macbook', brand: 'Apple', id: 1 },\r\n  { name: 'iPad', brand: 'Apple', id: 2, disable: true },\r\n  { name: 'Galaxy 5', brand: 'Samsung', id: 3 },\r\n  { name: 'Galaxy 1', brand: 'Samsung', id: 4 },\r\n  { name: 'Galaxy 2', brand: 'Samsung', id: 5 },\r\n  { name: 'every', brand: 'every', id: 6 },\r\n  1,\r\n  2,\r\n  3,\r\n])\r\n\r\nlet placeholder = computed(() => {\r\n  if (selectedItem.value.length) {\r\n    return itemToString(selectedItem.value[0], itemTitle.value, 'hasDefault')\r\n  }\r\n  return 'Seleccionar'\r\n})\r\n\r\nlet itemValue = ref('')\r\nlet itemTitle = ref('')\r\nlet itemText = ref('')\r\nlet itemSubtitle = ref('')\r\n\r\nlet isReturnObject = ref(false)\r\nlet focusOnSelect = ref(false)\r\nlet clearSearchOnSelect = ref(true)\r\nlet closeOnSelect = ref(false)\r\n\r\nlet selectedItem = ref([])\r\nlet search = ref('')\r\n\r\nlet searchableKeys = ref([])\r\n\r\nlet isSearcheableKeysEmpty = computed(() => {\r\n  return !!!searchableKeys.value.length\r\n})\r\n\r\nlet isClearSearchOnSelect = computed(() => {\r\n  return !!clearSearchOnSelect.value\r\n})\r\n\r\nlet isFocusOnSelect = computed(() => {\r\n  return !!focusOnSelect.value\r\n})\r\n\r\nlet isCloseOnSelect = computed(() => {\r\n  return !!closeOnSelect.value\r\n})\r\n\r\n// Search product names or fallback to currentBatchStep.\r\nlet filteredItems = computed(() => {\r\n  let itemsFound = items.value.filter(item => {\r\n    if (isObject(item)) {\r\n      let allKeys = Object.values(item)\r\n\r\n      let getSelectedKeyValue = [item].reduce((acc, curr) => {\r\n        let result = searchableKeys.value.map(key => {\r\n          return curr[key]\r\n        })\r\n        return result\r\n      }, [])\r\n\r\n      let keys = isSearcheableKeysEmpty.value ? allKeys : getSelectedKeyValue\r\n\r\n      return keys\r\n        ? keys.some(value =>\r\n            value.toString().toLowerCase().includes(search.value.toLowerCase())\r\n          )\r\n        : search.value\r\n        ? item == search.value\r\n        : item\r\n    }\r\n    return item.toString().toLowerCase().includes(search.value.toLowerCase())\r\n  })\r\n  return itemsFound.slice(0, currentBatchStep.value)\r\n})\r\n\r\nfunction itemToString(item, value, hasDefault) {\r\n  if (isObject(item)) {\r\n    if (value) {\r\n      if (Array.isArray(value)) {\r\n        return value.map(i => item[i]).join(' ')\r\n      }\r\n      return item[value]\r\n    }\r\n    if (hasDefault) {\r\n      return Object.values(item)[0]\r\n    }\r\n  }\r\n  if (hasDefault) {\r\n    return item\r\n  }\r\n}\r\n\r\nfunction getSelectedItem() {\r\n  let result = selectedItem.value[0]\r\n  if (isReturnObject.value) {\r\n    itemValue.value = result\r\n    // return result;\r\n  }\r\n  if (!isReturnObject.value && isObject(result)) {\r\n    itemValue.value = Object.values(result)[0]\r\n    // return Object.values(result)[0];\r\n  }\r\n  if (!isObject(result)) {\r\n    itemValue.value = result\r\n  }\r\n}\r\n\r\n// Define batch stepper number.\r\n\r\nlet batchScrollStepper = ref(20)\r\n\r\n//Next branch to iterate\r\nlet nextBatch = ref(null)\r\n\r\n// Current batch size, default is batchScrollStepper value.\r\nlet currentBatchStep = ref(batchScrollStepper.value)\r\n\r\nfunction clickOnSelect() {\r\n  isClearSearchOnSelect.value ? (search.value = '') : ''\r\n  isFocusOnSelect.value ? textFieldRef.value.focus() : ''\r\n  // isCloseOnSelect.value ?\r\n}\r\n</script>\r\n<route lang=\"yaml\">\r\nmeta:\r\n  title: Autocomplete (Facu)\r\n  description: Autocomplete demo on how to disable list items and clear field after item selection.\r\n  icon: '$mdiFormDropdown'\r\n</route>\r\n"],"names":["isObject","obj","textFieldRef","ref","items","placeholder","computed","selectedItem","itemToString","itemTitle","itemValue","itemText","itemSubtitle","isReturnObject","focusOnSelect","clearSearchOnSelect","closeOnSelect","search","searchableKeys","isSearcheableKeysEmpty","isClearSearchOnSelect","isFocusOnSelect","filteredItems","item","allKeys","getSelectedKeyValue","acc","curr","key","keys","value","currentBatchStep","hasDefault","i","getSelectedItem","result","batchScrollStepper","clickOnSelect"],"mappings":"mgBAmBA,SAAAA,EAAAC,EAAA,CACA,OAAAA,IAAA,MAAA,OAAAA,GAAA,UAAA,CAAA,MAAA,QAAAA,CAAA,CACA,oEC0EA,IAAAC,EAAAC,EAAA,IAAA,EAEAC,EAAAD,EAAA,CACA,CAAA,KAAA,UAAA,MAAA,QAAA,GAAA,CAAA,EACA,CAAA,KAAA,OAAA,MAAA,QAAA,GAAA,EAAA,QAAA,EAAA,EACA,CAAA,KAAA,WAAA,MAAA,UAAA,GAAA,CAAA,EACA,CAAA,KAAA,WAAA,MAAA,UAAA,GAAA,CAAA,EACA,CAAA,KAAA,WAAA,MAAA,UAAA,GAAA,CAAA,EACA,CAAA,KAAA,QAAA,MAAA,QAAA,GAAA,CAAA,EACA,EACA,EACA,CACA,CAAA,EAEAE,EAAAC,EAAA,IACAC,EAAA,MAAA,OACAC,EAAAD,EAAA,MAAA,GAAAE,EAAA,MAAA,YAAA,EAEA,aACA,EAEAC,EAAAP,EAAA,EAAA,EACAM,EAAAN,EAAA,EAAA,EACAQ,EAAAR,EAAA,EAAA,EACAS,EAAAT,EAAA,EAAA,EAEAU,EAAAV,EAAA,EAAA,EACAW,EAAAX,EAAA,EAAA,EACAY,EAAAZ,EAAA,EAAA,EACAa,EAAAb,EAAA,EAAA,EAEAI,EAAAJ,EAAA,EAAA,EACAc,EAAAd,EAAA,EAAA,EAEAe,EAAAf,EAAA,EAAA,EAEAgB,EAAAb,EAAA,IACA,CAAAY,EAAA,MAAA,MACA,EAEAE,EAAAd,EAAA,IACA,CAAA,CAAAS,EAAA,KACA,EAEAM,EAAAf,EAAA,IACA,CAAA,CAAAQ,EAAA,KACA,EAEAR,EAAA,IACA,CAAA,CAAAU,EAAA,KACA,EAGA,IAAAM,EAAAhB,EAAA,IACAF,EAAA,MAAA,OAAAmB,GAAA,CACA,GAAAvB,EAAAuB,CAAA,EAAA,CACA,IAAAC,EAAA,OAAA,OAAAD,CAAA,EAEAE,EAAA,CAAAF,CAAA,EAAA,OAAA,CAAAG,EAAAC,IACAT,EAAA,MAAA,IAAAU,GACAD,EAAAC,EACA,EAEA,EAAA,EAEAC,EAAAV,EAAA,MAAAK,EAAAC,EAEA,OAAAI,EACAA,EAAA,KAAAC,GACAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAAb,EAAA,MAAA,aAAA,CACA,EACAA,EAAA,MACAM,GAAAN,EAAA,MACAM,CACA,CACA,OAAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAAN,EAAA,MAAA,aAAA,CACA,CAAA,EACA,MAAA,EAAAc,EAAA,KAAA,CACA,EAEA,SAAAvB,EAAAe,EAAAO,EAAAE,EAAA,CACA,GAAAhC,EAAAuB,CAAA,EAAA,CACA,GAAAO,EACA,OAAA,MAAA,QAAAA,CAAA,EACAA,EAAA,IAAAG,GAAAV,EAAAU,EAAA,EAAA,KAAA,GAAA,EAEAV,EAAAO,GAEA,GAAAE,EACA,OAAA,OAAA,OAAAT,CAAA,EAAA,EAEA,CACA,GAAAS,EACA,OAAAT,CAEA,CAEA,SAAAW,GAAA,CACA,IAAAC,EAAA5B,EAAA,MAAA,GACAM,EAAA,QACAH,EAAA,MAAAyB,GAGA,CAAAtB,EAAA,OAAAb,EAAAmC,CAAA,IACAzB,EAAA,MAAA,OAAA,OAAAyB,CAAA,EAAA,IAGAnC,EAAAmC,CAAA,IACAzB,EAAA,MAAAyB,EAEA,CAIA,IAAAC,EAAAjC,EAAA,EAAA,EAGAA,EAAA,IAAA,EAGA,IAAA4B,EAAA5B,EAAAiC,EAAA,KAAA,EAEA,SAAAC,GAAA,CACAjB,EAAA,QAAAH,EAAA,MAAA,IACAI,EAAA,OAAAnB,EAAA,MAAA,MAAA,CAEA"}