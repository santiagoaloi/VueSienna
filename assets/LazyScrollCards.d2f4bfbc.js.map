{"version":3,"file":"LazyScrollCards.d2f4bfbc.js","sources":["../../src/pages/playground/projects/lazy-scroll-cards/LazyScrollCards.vue"],"sourcesContent":["<template>\r\n  <VContainer class=\"py-3\">\r\n    <div class=\"display-2\">Endless scrolling with VLazy</div>\r\n    <h5>\r\n      <span v-text=\"visibleProjects\"></span> of\r\n      <span>{{ projects.length }}</span> posts shown\r\n    </h5>\r\n    <VRow class=\"fill-height overflow-y-auto\" v-if=\"projects.length\">\r\n      <VCol lg=\"3\" md=\"4\" sm=\"6\" cols=\"12\" v-for=\"(project, index) in projects\">\r\n        <VSheet min-height=\"300\" class=\"fill-height\" color=\"red\">\r\n          <VLazy\r\n            v-model=\"project.isActive\"\r\n            :options=\"{\r\n              threshold: 0.8,\r\n            }\"\r\n            class=\"fill-height\"\r\n          >\r\n            <VCard color=\"rgba(20, 20, 20, 0.8)\" class=\"fill-height\" hover>\r\n              <VCardText>\r\n                <VRow :key=\"index\" @click=\"\">\r\n                  <VCol sm=\"10\" cols=\"12\" class=\"text-sm-left text-center\">\r\n                    #{{ index + 1 }}\r\n                    <h2 v-html=\"project.title\"></h2>\r\n                    <div v-html=\"project.subtitle\"></div>\r\n                  </VCol>\r\n                </VRow>\r\n              </VCardText>\r\n            </VCard>\r\n          </VLazy>\r\n        </VSheet>\r\n      </VCol>\r\n    </VRow>\r\n  </VContainer>\r\n</template>\r\n\r\n<script setup>\r\ndefineOptions({\r\n  name: 'playgroundLazyScroll',\r\n})\r\n\r\nlet router = useRouter()\r\nlet allRoutes = router.getRoutes()\r\n\r\n// List all routes in @/pages/playground/*\r\n// exclude this SFC.\r\nlet routes = allRoutes.filter(\r\n  r => r.name?.includes('playground') && r.name !== 'playground'\r\n)\r\n\r\nlet visibleProjects = $computed(() => {\r\n  return projects.filter(project => project.isActive).length\r\n})\r\n\r\nlet projects = reactive(\r\n  routes\r\n    .flatMap(({ name, meta }) => {\r\n      let regex = /(\\w+)$/\r\n      let path = 'playground/projects/'\r\n      let fileName = name.match(regex)[1]\r\n\r\n      return [\r\n        {\r\n          prependIcon: '$mdiSpaceInvaders',\r\n          // Metadata custom name or extract SFC name.\r\n          title: meta.title || fileName,\r\n          get to() {\r\n            return `${path + fileName}`\r\n          },\r\n          subtitle: meta.description\r\n            ? `<span class=\"text-deep-purple-accent-1\">Ali Connors</span> &mdash; ${meta.description}`\r\n            : 'No description available',\r\n        },\r\n      ]\r\n    })\r\n    //Sort titles alphabetically.\r\n    .sort(() => -1)\r\n)\r\n</script>\r\n<route lang=\"yaml\">\r\nmeta:\r\n  title: Lazy scroll (cards - playground files)\r\n  description: Tryout of lazy loading cards.\r\n  icon: $mdiCardOutline\r\n</route>\r\n"],"names":["__default__","DO_defineComponent","routes","useRouter","r","_a","visibleProjects","_computed","projects","project","reactive","name","meta","regex","path","fileName"],"mappings":"snBAoCcA,EAAAC,EAAA,CACd,KAAA,sBACA,CAAA,8BAOA,IAAAC,EALAC,EAAA,EACA,UAAA,EAIA,OACAC,GAAA,OAAA,QAAAC,EAAAD,EAAA,OAAA,YAAAC,EAAA,SAAA,gBAAAD,EAAA,OAAA,aACA,EAEAE,EAAAC,EAAA,IACAC,EAAA,OAAAC,GAAAA,EAAA,QAAA,EAAA,MACA,EAEAD,EAAAE,EACAR,EACA,QAAA,CAAA,CAAA,KAAAS,EAAA,KAAAC,KAAA,CACA,IAAAC,EAAA,SACAC,EAAA,uBACAC,EAAAJ,EAAA,MAAAE,CAAA,EAAA,GAEA,MAAA,CACA,CACA,YAAA,oBAEA,MAAAD,EAAA,OAAAG,EACA,IAAA,IAAA,CACA,MAAA,GAAAD,EAAAC,GACA,EACA,SAAAH,EAAA,YACA,sEAAAA,EAAA,cACA,0BACA,CACA,CACA,CAAA,EAEA,KAAA,IAAA,EAAA,CACA"}