{"version":3,"file":"Autocomplete.f9d0a954.js","sources":["../../src/pages/playground/projects/autocomplete copy/Autocomplete.vue"],"sourcesContent":["<template>\n  <VContainer class=\"d-flex align-center fill-height\">\n    <v-card class=\"mx-auto\" width=\"500 \">\n      <v-container>\n        <v-switch\n          v-model=\"clearOnSelect\"\n          class=\"mb-n2\"\n          color=\"primary\"\n          label=\"Clear on select\"\n        />\n\n        <div class=\"mb-4\">\n          <code>{{ cachedSelectedWizard }} </code>\n        </div>\n\n        <div>\n          <code> Harry is {{ isHarryDisabled ? 'disabled' : 'enabled' }} </code>\n          <v-btn\n            @click=\"disabled = !disabled\"\n            class=\"ml-2\"\n            size=\"small\"\n            :color=\"disabled ? 'primary' : 'grey'\"\n          >\n            {{ isHarryDisabled ? 'enable' : 'disable' }}\n          </v-btn>\n        </div>\n\n        <VAutocomplete\n          autofocus\n          :items=\"wizards\"\n          class=\"mt-4\"\n          v-model=\"selectedWizard\"\n          return-object\n          item-props=\"itemProps\"\n          ref=\"inputRef\"\n          @update:model-value=\"onAutocompleteSelect\"\n          item-title=\"name\"\n        >\n        </VAutocomplete>\n      </v-container>\n    </v-card>\n  </VContainer>\n</template>\n\n<script setup>\nlet wizards = reactive([\n  { id: 1, name: 'Harry', lastName: 'Potter', itemProps: { disabled: true } },\n  { id: 2, name: 'Ron', lastName: 'Weasley', itemProps: { disabled: false } },\n  { id: 3, name: 'Ginny', lastName: 'Weasley', itemProps: { disabled: false } },\n\n  {\n    id: 4,\n    name: 'Lord',\n    lastName: 'Voldemort',\n    itemProps: { disabled: false },\n  },\n  {\n    id: 5,\n    name: 'Severus',\n    lastName: 'Snape',\n    itemProps: { disabled: false },\n  },\n  {\n    id: 6,\n    name: 'Albus',\n    lastName: 'Dumbledore',\n    itemProps: { disabled: false },\n  },\n])\n\nlet inputRef = $ref(null)\nlet clearOnSelect = $ref(true)\nlet selectedWizard = $ref(null)\nlet cachedSelectedWizard = $ref(null)\n\nasync function onAutocompleteSelect(e) {\n  if (!clearOnSelect) return\n  await nextTick()\n  selectedWizard = []\n  inputRef.search = null\n  cachedSelectedWizard = e\n}\n\nlet isHarryDisabled = $computed(() => {\n  return wizards[0].itemProps.disabled\n})\n\nlet { disabled } = toRefs(wizards[0].itemProps)\n</script>\n\n<route lang=\"yaml\">\nmeta:\n  title: Autocomplete - Clear on Select\n  description: Autocomplete demo on how to disable list items and clear field after item selection.\n  icon: '$mdiFormDropdown'\n</route>\n"],"names":["wizards","reactive","inputRef","_ref","clearOnSelect","selectedWizard","cachedSelectedWizard","onAutocompleteSelect","e","nextTick","isHarryDisabled","_computed","disabled","toRefs"],"mappings":"0SA6CA,IAAAA,EAAAC,EAAA,CACA,CAAA,GAAA,EAAA,KAAA,QAAA,SAAA,SAAA,UAAA,CAAA,SAAA,GAAA,EACA,CAAA,GAAA,EAAA,KAAA,MAAA,SAAA,UAAA,UAAA,CAAA,SAAA,GAAA,EACA,CAAA,GAAA,EAAA,KAAA,QAAA,SAAA,UAAA,UAAA,CAAA,SAAA,GAAA,EAEA,CACA,GAAA,EACA,KAAA,OACA,SAAA,YACA,UAAA,CAAA,SAAA,EAAA,CACA,EACA,CACA,GAAA,EACA,KAAA,UACA,SAAA,QACA,UAAA,CAAA,SAAA,EAAA,CACA,EACA,CACA,GAAA,EACA,KAAA,QACA,SAAA,aACA,UAAA,CAAA,SAAA,EAAA,CACA,CACA,CAAA,EAEAC,EAAAC,EAAA,IAAA,EACAC,EAAAD,EAAA,EAAA,EACAE,EAAAF,EAAA,IAAA,EACAG,EAAAH,EAAA,IAAA,EAEA,eAAAI,EAAAC,EAAA,CACA,CAAAJ,EAAA,QACA,MAAAK,EAAA,EACAJ,EAAA,MAAA,CAAA,EACAH,EAAA,MAAA,OAAA,KACAI,EAAA,MAAAE,EACA,CAEA,IAAAE,EAAAC,EAAA,IACAX,EAAA,GAAA,UAAA,QACA,EAEA,CAAA,SAAAY,CAAA,EAAAC,EAAAb,EAAA,GAAA,SAAA"}