{"version":3,"file":"VCheckboxBtn.c60b8ad0.js","sources":["../../node_modules/vuetify/lib/components/VCheckbox/VCheckboxBtn.mjs"],"sourcesContent":["import { createVNode as _createVNode, mergeProps as _mergeProps, resolveDirective as _resolveDirective } from \"vue\";\n// Components\nimport { makeSelectionControlProps, VSelectionControl } from \"../VSelectionControl/VSelectionControl.mjs\"; // Composables\nimport { IconValue } from \"../../composables/icons.mjs\";\nimport { useProxiedModel } from \"../../composables/proxiedModel.mjs\"; // Utilities\nimport { computed } from 'vue';\nimport { defineComponent, pick, propsFactory, useRender } from \"../../util/index.mjs\"; // Types\nexport const makeVCheckboxBtnProps = propsFactory({\n  indeterminate: Boolean,\n  indeterminateIcon: {\n    type: IconValue,\n    default: '$checkboxIndeterminate'\n  },\n  ...makeSelectionControlProps({\n    falseIcon: '$checkboxOff',\n    trueIcon: '$checkboxOn'\n  })\n}, 'v-checkbox-btn');\nexport const VCheckboxBtn = defineComponent({\n  name: 'VCheckboxBtn',\n  props: makeVCheckboxBtnProps(),\n  emits: {\n    'update:modelValue': value => true,\n    'update:indeterminate': val => true\n  },\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const indeterminate = useProxiedModel(props, 'indeterminate');\n    const model = useProxiedModel(props, 'modelValue');\n    function onChange(v) {\n      if (indeterminate.value) {\n        indeterminate.value = false;\n      }\n    }\n    const falseIcon = computed(() => {\n      return props.indeterminate ? props.indeterminateIcon : props.falseIcon;\n    });\n    const trueIcon = computed(() => {\n      return props.indeterminate ? props.indeterminateIcon : props.trueIcon;\n    });\n    useRender(() => _createVNode(VSelectionControl, _mergeProps(props, {\n      \"modelValue\": model.value,\n      \"onUpdate:modelValue\": [$event => model.value = $event, onChange],\n      \"class\": \"v-checkbox-btn\",\n      \"type\": \"checkbox\",\n      \"inline\": true,\n      \"falseIcon\": falseIcon.value,\n      \"trueIcon\": trueIcon.value,\n      \"aria-checked\": props.indeterminate ? 'mixed' : undefined\n    }), slots));\n    return {};\n  }\n});\nexport function filterCheckboxBtnProps(props) {\n  return pick(props, Object.keys(VCheckboxBtn.props));\n}\n//# sourceMappingURL=VCheckboxBtn.mjs.map"],"names":["makeVCheckboxBtnProps","propsFactory","IconValue","makeSelectionControlProps","VCheckboxBtn","defineComponent","value","val","props","_ref","slots","indeterminate","useProxiedModel","model","onChange","v","falseIcon","computed","trueIcon","useRender","_createVNode","VSelectionControl","_mergeProps","$event","filterCheckboxBtnProps","pick"],"mappings":"kLAOY,MAACA,EAAwBC,EAAa,CAChD,cAAe,QACf,kBAAmB,CACjB,KAAMC,EACN,QAAS,wBACV,EACD,GAAGC,EAA0B,CAC3B,UAAW,eACX,SAAU,aACd,CAAG,CACH,EAAG,gBAAgB,EACNC,EAAeC,EAAgB,CAC1C,KAAM,eACN,MAAOL,EAAuB,EAC9B,MAAO,CACL,oBAAqBM,GAAS,GAC9B,uBAAwBC,GAAO,EAChC,EACD,MAAMC,EAAOC,EAAM,CACjB,GAAI,CACF,MAAAC,CACD,EAAGD,EACJ,MAAME,EAAgBC,EAAgBJ,EAAO,eAAe,EACtDK,EAAQD,EAAgBJ,EAAO,YAAY,EACjD,SAASM,EAASC,EAAG,CACfJ,EAAc,QAChBA,EAAc,MAAQ,GAEzB,CACD,MAAMK,EAAYC,EAAS,IAClBT,EAAM,cAAgBA,EAAM,kBAAoBA,EAAM,SAC9D,EACKU,EAAWD,EAAS,IACjBT,EAAM,cAAgBA,EAAM,kBAAoBA,EAAM,QAC9D,EACD,OAAAW,EAAU,IAAMC,EAAaC,EAAmBC,EAAYd,EAAO,CACjE,WAAcK,EAAM,MACpB,sBAAuB,CAACU,GAAUV,EAAM,MAAQU,EAAQT,CAAQ,EAChE,MAAS,iBACT,KAAQ,WACR,OAAU,GACV,UAAaE,EAAU,MACvB,SAAYE,EAAS,MACrB,eAAgBV,EAAM,cAAgB,QAAU,MACtD,CAAK,EAAGE,CAAK,CAAC,EACH,EACR,CACH,CAAC,EACM,SAASc,EAAuBhB,EAAO,CAC5C,OAAOiB,EAAKjB,EAAO,OAAO,KAAKJ,EAAa,KAAK,CAAC,CACpD"}