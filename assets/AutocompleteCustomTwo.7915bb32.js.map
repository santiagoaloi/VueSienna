{"version":3,"file":"AutocompleteCustomTwo.7915bb32.js","sources":["../../src/pages/playground/projects/autocomplete-custom-two/AutocompleteCustomTwo.vue"],"sourcesContent":["<template>\n  <VCard class=\"overflow-visible\" min-height=\"300\" color=\"#323a44\">\n    <VCardText>\n      <span class=\"pa-4\">\n        <div>\n          <code> searchable keys: {{ searchableKeys }} </code>\n        </div>\n\n        <div>\n          <code> Selected-item: {{ selectedItem }} </code>\n        </div>\n\n        <div>\n          <code> v-model: {{ itemValue }} </code>\n        </div>\n\n        <div>\n          <code>\n            return-object: {{ isReturnObject }}\n            <VBtn\n              color=\"success\"\n              @click=\"isReturnObject = !isReturnObject\"\n              density=\"compact\"\n            >\n              switch\n            </VBtn>\n          </code>\n        </div>\n\n        <div>\n          <code>\n            focus-on-select: {{ isFocusOnSelect }}\n            <VBtn\n              color=\"success\"\n              @click=\"focusOnSelect = !focusOnSelect\"\n              density=\"compact\"\n            >\n              switch\n            </VBtn>\n          </code>\n        </div>\n\n        <div>\n          <code>\n            clear-search-on-select: {{ isClearSearchOnSelect }}\n            <VBtn\n              color=\"success\"\n              @click=\"clearSearchOnSelect = !clearSearchOnSelect\"\n              density=\"compact\"\n            >\n              switch\n            </VBtn>\n          </code>\n        </div>\n      </span>\n\n      <VMenu>\n        <template v-slot:activator=\"{ props, isActive }\">\n          <VTextField\n            v-model=\"search\"\n            color.trim=\"primary\"\n            v-bind=\"props\"\n            ref=\"textFieldRef\"\n            :placeholder=\"placeholder\"\n            :append-inner-icon=\"\n              isActive ? '$mdiMenuUpOutline' : '$mdiMenuDownOutline'\n            \"\n          />\n        </template>\n\n        <VList\n          v-model:selected=\"selectedItem\"\n          @click:select=\"clickOnSelect\"\n          @update:selected=\"getSelectedItem()\"\n        >\n          <VListItem\n            v-for=\"(item, index) in filteredItems\"\n            :key=\"index\"\n            :value=\"item\"\n          >\n            <VListItemTitle>{{\n              itemToString(item, itemText, 'hasDefault')\n            }}</VListItemTitle>\n            <VListItem-subtitle>{{\n              itemToString(item, itemSubtitle)\n            }}</VListItem-subtitle>\n          </VListItem>\n        </VList>\n      </VMenu>\n    </VCardText>\n  </VCard>\n</template>\n<script setup>\nimport { isObject } from '@/utils/methods'\n\nlet textFieldRef = ref(null)\n\nlet items = ref([\n  { name: 'Macbook', brand: 'Apple', id: 1 },\n  { name: 'iPad', brand: 'Apple', id: 2, disable: true },\n  { name: 'Galaxy 5', brand: 'Samsung', id: 3 },\n  { name: 'Galaxy 1', brand: 'Samsung', id: 4 },\n  { name: 'Galaxy 2', brand: 'Samsung', id: 5 },\n  { name: 'every', brand: 'every', id: 6 },\n  1,\n  2,\n  3,\n])\n\nlet placeholder = computed(() => {\n  if (selectedItem.value.length) {\n    return itemToString(selectedItem.value[0], itemTitle.value, 'hasDefault')\n  }\n  return 'Seleccionar'\n})\n\nlet itemValue = ref('')\nlet itemTitle = ref('')\nlet itemText = ref('')\nlet itemSubtitle = ref('')\n\nlet isReturnObject = ref(false)\nlet focusOnSelect = ref(false)\nlet clearSearchOnSelect = ref(true)\nlet closeOnSelect = ref(false)\n\nlet selectedItem = ref([])\nlet search = ref('')\n\nlet searchableKeys = ref([])\n\nlet isSearcheableKeysEmpty = computed(() => {\n  return !!!searchableKeys.value.length\n})\n\nlet isClearSearchOnSelect = computed(() => {\n  return !!clearSearchOnSelect.value\n})\n\nlet isFocusOnSelect = computed(() => {\n  return !!focusOnSelect.value\n})\n\nlet isCloseOnSelect = computed(() => {\n  return !!closeOnSelect.value\n})\n\n// Search product names or fallback to currentBatchStep.\nlet filteredItems = computed(() => {\n  let itemsFound = items.value.filter(item => {\n    if (isObject(item)) {\n      let allKeys = Object.values(item)\n\n      let getSelectedKeyValue = [item].reduce((acc, curr) => {\n        let result = searchableKeys.value.map(key => {\n          return curr[key]\n        })\n        return result\n      }, [])\n\n      let keys = isSearcheableKeysEmpty.value ? allKeys : getSelectedKeyValue\n\n      return keys\n        ? keys.some(value =>\n            value.toString().toLowerCase().includes(search.value.toLowerCase())\n          )\n        : search.value\n        ? item == search.value\n        : item\n    }\n    return item.toString().toLowerCase().includes(search.value.toLowerCase())\n  })\n  return itemsFound.slice(0, currentBatchStep.value)\n})\n\nfunction itemToString(item, value, hasDefault) {\n  if (isObject(item)) {\n    if (value) {\n      if (Array.isArray(value)) {\n        return value.map(i => item[i]).join(' ')\n      }\n      return item[value]\n    }\n    if (hasDefault) {\n      return Object.values(item)[0]\n    }\n  }\n  if (hasDefault) {\n    return item\n  }\n}\n\nfunction getSelectedItem() {\n  let result = selectedItem.value[0]\n  if (isReturnObject.value) {\n    itemValue.value = result\n    // return result;\n  }\n  if (!isReturnObject.value && isObject(result)) {\n    itemValue.value = Object.values(result)[0]\n    // return Object.values(result)[0];\n  }\n  if (!isObject(result)) {\n    itemValue.value = result\n  }\n}\n\n// Define batch stepper number.\n\nlet batchScrollStepper = ref(20)\n\n//Next branch to iterate\nlet nextBatch = ref(null)\n\n// Current batch size, default is batchScrollStepper value.\nlet currentBatchStep = ref(batchScrollStepper.value)\n\nfunction clickOnSelect() {\n  isClearSearchOnSelect.value ? (search.value = '') : ''\n  isFocusOnSelect.value ? textFieldRef.value.focus() : ''\n  // isCloseOnSelect.value ?\n}\n</script>\n<route lang=\"yaml\">\nmeta:\n  title: Autocomplete (Facu)\n  description: Autocomplete demo on how to disable list items and clear field after item selection.\n  icon: '$mdiFormDropdown'\n</route>\n"],"names":["textFieldRef","ref","items","placeholder","computed","selectedItem","itemToString","itemTitle","itemValue","itemText","itemSubtitle","isReturnObject","focusOnSelect","clearSearchOnSelect","closeOnSelect","search","searchableKeys","isSearcheableKeysEmpty","isClearSearchOnSelect","isFocusOnSelect","filteredItems","item","isObject","allKeys","getSelectedKeyValue","acc","curr","key","keys","value","currentBatchStep","hasDefault","i","getSelectedItem","result","batchScrollStepper","clickOnSelect"],"mappings":"ipBA+FA,IAAAA,EAAAC,EAAA,IAAA,EAEAC,EAAAD,EAAA,CACA,CAAA,KAAA,UAAA,MAAA,QAAA,GAAA,CAAA,EACA,CAAA,KAAA,OAAA,MAAA,QAAA,GAAA,EAAA,QAAA,EAAA,EACA,CAAA,KAAA,WAAA,MAAA,UAAA,GAAA,CAAA,EACA,CAAA,KAAA,WAAA,MAAA,UAAA,GAAA,CAAA,EACA,CAAA,KAAA,WAAA,MAAA,UAAA,GAAA,CAAA,EACA,CAAA,KAAA,QAAA,MAAA,QAAA,GAAA,CAAA,EACA,EACA,EACA,CACA,CAAA,EAEAE,EAAAC,EAAA,IACAC,EAAA,MAAA,OACAC,EAAAD,EAAA,MAAA,GAAAE,EAAA,MAAA,YAAA,EAEA,aACA,EAEAC,EAAAP,EAAA,EAAA,EACAM,EAAAN,EAAA,EAAA,EACAQ,EAAAR,EAAA,EAAA,EACAS,EAAAT,EAAA,EAAA,EAEAU,EAAAV,EAAA,EAAA,EACAW,EAAAX,EAAA,EAAA,EACAY,EAAAZ,EAAA,EAAA,EACAa,EAAAb,EAAA,EAAA,EAEAI,EAAAJ,EAAA,EAAA,EACAc,EAAAd,EAAA,EAAA,EAEAe,EAAAf,EAAA,EAAA,EAEAgB,EAAAb,EAAA,IACA,CAAAY,EAAA,MAAA,MACA,EAEAE,EAAAd,EAAA,IACA,CAAA,CAAAS,EAAA,KACA,EAEAM,EAAAf,EAAA,IACA,CAAA,CAAAQ,EAAA,KACA,EAEAR,EAAA,IACA,CAAA,CAAAU,EAAA,KACA,EAGA,IAAAM,EAAAhB,EAAA,IACAF,EAAA,MAAA,OAAAmB,GAAA,CACA,GAAAC,EAAAD,CAAA,EAAA,CACA,IAAAE,EAAA,OAAA,OAAAF,CAAA,EAEAG,EAAA,CAAAH,CAAA,EAAA,OAAA,CAAAI,EAAAC,IACAV,EAAA,MAAA,IAAAW,GACAD,EAAAC,EACA,EAEA,EAAA,EAEAC,EAAAX,EAAA,MAAAM,EAAAC,EAEA,OAAAI,EACAA,EAAA,KAAAC,GACAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAAd,EAAA,MAAA,aAAA,CACA,EACAA,EAAA,MACAM,GAAAN,EAAA,MACAM,CACA,CACA,OAAAA,EAAA,SAAA,EAAA,YAAA,EAAA,SAAAN,EAAA,MAAA,aAAA,CACA,CAAA,EACA,MAAA,EAAAe,EAAA,KAAA,CACA,EAEA,SAAAxB,EAAAe,EAAAQ,EAAAE,EAAA,CACA,GAAAT,EAAAD,CAAA,EAAA,CACA,GAAAQ,EACA,OAAA,MAAA,QAAAA,CAAA,EACAA,EAAA,IAAAG,GAAAX,EAAAW,EAAA,EAAA,KAAA,GAAA,EAEAX,EAAAQ,GAEA,GAAAE,EACA,OAAA,OAAA,OAAAV,CAAA,EAAA,EAEA,CACA,GAAAU,EACA,OAAAV,CAEA,CAEA,SAAAY,GAAA,CACA,IAAAC,EAAA7B,EAAA,MAAA,GACAM,EAAA,QACAH,EAAA,MAAA0B,GAGA,CAAAvB,EAAA,OAAAW,EAAAY,CAAA,IACA1B,EAAA,MAAA,OAAA,OAAA0B,CAAA,EAAA,IAGAZ,EAAAY,CAAA,IACA1B,EAAA,MAAA0B,EAEA,CAIA,IAAAC,EAAAlC,EAAA,EAAA,EAGAA,EAAA,IAAA,EAGA,IAAA6B,EAAA7B,EAAAkC,EAAA,KAAA,EAEA,SAAAC,GAAA,CACAlB,EAAA,QAAAH,EAAA,MAAA,IACAI,EAAA,OAAAnB,EAAA,MAAA,MAAA,CAEA"}